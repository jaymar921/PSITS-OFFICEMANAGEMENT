@page "/"
<div class="relative block w-full h-full md:flex">
    <div class="relative min-w-[250px] w-[100%] md:w-[20%] h-[fit-content] md:h-[100%] pb-[200px] md:pb-1">
        <!-- Profile Card -->
        <ProfileCard 
            CardTitle="Hello Admin" 
            User="@User" 
            ShowButton=true 
            ButtonContent="Logout" 
            ButtonClassName="mt-2 bg-[#bbb] p-2 rounded hover:bg-[#ccc] font-bold"
            OnButtonClicked="@LogoutAsync" />
        <!-- End of Profile Card --> 
    </div>
    <div class="relative w-full md:w-[80%] h-full">
        <div>
            <Button OnButtonClicked="PreviousMonth" ClassName="p-2 m-2 bg-blue-100 rounded-[10px]">Back</Button>
            <Button OnButtonClicked="NextMonth" ClassName="p-2 m-2 bg-blue-100 rounded-[10px]">Next</Button>
        </div>
        <Calendar Date="@Date" OfficeLogs="@OfficeLogs"/>
    </div>
</div>

@code {
    public async Task LogoutAsync()
    {
        // logout user
        await AuthenticationApiService.Logout();

        NavigationManager.NavigateTo("/login");
    }

    private async Task NextMonth()
    {
        try
        {
            Date = new DateTime(Date.Year, Date.Month + 1, Date.Day);
        }catch
        {
            Date = new DateTime(Date.Year+1, 1, Date.Day);
        }
        Console.WriteLine("Next... " + Date);
        StateHasChanged();
        await LoadOfficeLogs();
    }

    private async Task PreviousMonth()
    {
        try
        {
            Date = new DateTime(Date.Year, Date.Month - 1, Date.Day);
        }
        catch
        {
            Date = new DateTime(Date.Year - 1, 12, Date.Day);
        }
        
        Console.WriteLine("Previous..." + Date);
        StateHasChanged();
        await LoadOfficeLogs();
    }
}
